# importing the libraries
import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
%matplotlib inline

#importing the data
adani_ports = pd.read_csv("~/Documents/Data Science/Journey/Projects/NIFTY 50 PROJECT/DATA/ADANIPORTS.csv")
adani_ports

# columns of the data
list(adani_ports.columns)

#information of the data
adani_ports.info()

# finding the sum of null values in each column
adani_ports.isnull().sum()

#finding the sum of duplicated values
adani_ports.duplicated().sum()

# using the describe function to know more about the data
adani_ports.describe().round(2).transpose()

# converting the date format of data from object to datetime
adani_ports["Date"] = pd.to_datetime(adani_ports["Date"])

adani_ports.info()

#creating the columns year, month, date from the datetime column
adani_ports["Year"] = adani_ports["Date"].dt.year
adani_ports["Month"] = adani_ports["Date"].dt.month
adani_ports["Day"] = adani_ports["Date"].dt.day

# final data
adani_ports

### Doing the above process for the next 9 datasets 

asian_paint = pd.read_csv("~/Documents/Data Science/Journey/Projects/NIFTY 50 PROJECT/DATA/ASIANPAINT.csv")
axis_bank = pd.read_csv("~/Documents/Data Science/Journey/Projects/NIFTY 50 PROJECT/DATA/AXISBANK.csv")
bajaj_auto = pd.read_csv("~/Documents/Data Science/Journey/Projects/NIFTY 50 PROJECT/DATA/BAJAJ-AUTO.csv")
bajaj_finsv = pd.read_csv("~/Documents/Data Science/Journey/Projects/NIFTY 50 PROJECT/DATA/BAJAJFINSV.csv")
baj_finance = pd.read_csv("~/Documents/Data Science/Journey/Projects/NIFTY 50 PROJECT/DATA/BAJFINANCE.csv")
bharti_artl = pd.read_csv("~/Documents/Data Science/Journey/Projects/NIFTY 50 PROJECT/DATA/BHARTIARTL.csv")
bpcl = pd.read_csv("~/Documents/Data Science/Journey/Projects/NIFTY 50 PROJECT/DATA/BPCL.csv")
britannia = pd.read_csv("~/Documents/Data Science/Journey/Projects/NIFTY 50 PROJECT/DATA/BRITANNIA.csv")
cipla = pd.read_csv("~/Documents/Data Science/Journey/Projects/NIFTY 50 PROJECT/DATA/CIPLA.csv")

print(asian_paint.isnull().sum())
print("-"*25)
print("Number of Duplicates :",asian_paint.duplicated().sum())

print(axis_bank.isnull().sum())
print("-"*25)
print("Number of Duplicates :",axis_bank.duplicated().sum())

print(bajaj_auto.isnull().sum())
print("-"*25)
print("Number of Duplicates :",bajaj_auto.duplicated().sum())

print(bajaj_finsv.isnull().sum())
print("-"*25)
print("Number of Duplicates :",bajaj_finsv.duplicated().sum())

print(baj_finance.isnull().sum())
print("-"*25)
print("Number of Duplicates :",baj_finance.duplicated().sum())

print(bharti_artl.isnull().sum())
print("-"*25)
print("Number of Duplicates :",bharti_artl.duplicated().sum())

print(bpcl.isnull().sum())
print("-"*25)
print("Number of Duplicates :",bpcl.duplicated().sum())

print(britannia.isnull().sum())
print("-"*25)
print("Number of Duplicates :",britannia.duplicated().sum())

print(cipla.isnull().sum())
print("-"*25)
print("Number of Duplicates :",cipla.duplicated().sum())

asian_paint["Date"] = pd.to_datetime(asian_paint["Date"])
axis_bank["Date"] = pd.to_datetime(axis_bank["Date"])
bajaj_auto["Date"] = pd.to_datetime(bajaj_auto["Date"])
bajaj_finsv["Date"] = pd.to_datetime(bajaj_finsv["Date"])
baj_finance["Date"] = pd.to_datetime(baj_finance["Date"])
bharti_artl["Date"] = pd.to_datetime(bharti_artl["Date"])
bpcl["Date"] = pd.to_datetime(bpcl["Date"])
britannia["Date"] = pd.to_datetime(britannia["Date"])
cipla["Date"] = pd.to_datetime(cipla["Date"])

asian_paint["Year"] = asian_paint["Date"].dt.year
asian_paint["Month"] = asian_paint["Date"].dt.month
asian_paint["Day"] = asian_paint["Date"].dt.day

axis_bank["Year"] = axis_bank["Date"].dt.year
axis_bank["Month"] = axis_bank["Date"].dt.month
axis_bank["Day"] = axis_bank["Date"].dt.day

bajaj_auto["Year"] = bajaj_auto["Date"].dt.year
bajaj_auto["Month"] = bajaj_auto["Date"].dt.month
bajaj_auto["Day"] = bajaj_auto["Date"].dt.day

bajaj_finsv["Year"] = bajaj_finsv["Date"].dt.year
bajaj_finsv["Month"] = bajaj_finsv["Date"].dt.month
bajaj_finsv["Day"] = bajaj_finsv["Date"].dt.day

baj_finance["Year"] = baj_finance["Date"].dt.year
baj_finance["Month"] = baj_finance["Date"].dt.month
baj_finance["Day"] = baj_finance["Date"].dt.day

bharti_artl["Year"] = bharti_artl["Date"].dt.year
bharti_artl["Month"] = bharti_artl["Date"].dt.month
bharti_artl["Day"] = bharti_artl["Date"].dt.day

bpcl["Year"] = bpcl["Date"].dt.year
bpcl["Month"] = bpcl["Date"].dt.month
bpcl["Day"] = bpcl["Date"].dt.day

britannia["Year"] = britannia["Date"].dt.year
britannia["Month"] = britannia["Date"].dt.month
britannia["Day"] = britannia["Date"].dt.day

cipla["Year"] = cipla["Date"].dt.year
cipla["Month"] = cipla["Date"].dt.month
cipla["Day"] = cipla["Date"].dt.day

# dropping the columns trades, deliverable volume, %deliverble as the columns differ from each other and can't be easily compared
adani_ports.drop(['Trades','Deliverable Volume','%Deliverble'],axis=1)
asian_paint.drop(['Trades','Deliverable Volume','%Deliverble'],axis=1)
axis_bank.drop(['Trades','Deliverable Volume','%Deliverble'],axis=1)
bajaj_auto.drop(['Trades','Deliverable Volume','%Deliverble'],axis=1)
bajaj_finsv.drop(['Trades','Deliverable Volume','%Deliverble'],axis=1)
baj_finance.drop(['Trades','Deliverable Volume','%Deliverble'],axis=1)
bharti_artl.drop(['Trades','Deliverable Volume','%Deliverble'],axis=1)
bpcl.drop(['Trades','Deliverable Volume','%Deliverble'],axis=1)
britannia.drop(['Trades','Deliverable Volume','%Deliverble'],axis=1)
cipla.drop(['Trades','Deliverable Volume','%Deliverble'],axis=1)

## Plotting the Data

# price comparison
plt.figure(figsize=(25,10))
plt.plot(adani_ports['Date'],adani_ports['Open'],label="Adani Ports")
plt.plot(asian_paint['Date'],asian_paint['Open'],label="Asain Paint")
plt.plot(axis_bank['Date'],axis_bank['Open'],label="Axis Bank")
plt.plot(bajaj_auto['Date'],bajaj_auto['Open'],label="Bajaj Auto")
plt.plot(bajaj_finsv['Date'],bajaj_finsv['Open'],label="Bajaj Finserv ")
plt.plot(baj_finance['Date'],baj_finance['Open'],label="Bajaj Finance")
plt.plot(bharti_artl['Date'],bharti_artl['Open'],label="Bharti Airtel")
plt.plot(bpcl['Date'],bpcl['Open'],label="BPCL")
plt.plot(britannia['Date'],britannia['Open'],label="Britannia")
plt.plot(cipla['Date'],cipla['Open'],label="Cipla")

plt.title("The Openings of The NIFTY TOP 10",fontsize=15)
plt.xlabel("Year",fontsize=15)
plt.ylabel("Opening Price",fontsize=15)
plt.legend(fontsize=15,loc="best")
plt.show()

# volume comparison
plt.figure(figsize=(25,10))
plt.plot(adani_ports['Date'],adani_ports['Volume'],label="Adani Ports")
plt.plot(asian_paint['Date'],asian_paint['Volume'],label="Asain Paint")
plt.plot(axis_bank['Date'],axis_bank['Volume'],label="Axis Bank")
plt.plot(bajaj_auto['Date'],bajaj_auto['Volume'],label="Bajaj Auto")
plt.plot(bajaj_finsv['Date'],bajaj_finsv['Volume'],label="Bajaj Finserv ")
plt.plot(baj_finance['Date'],baj_finance['Volume'],label="Bajaj Finance")
plt.plot(bharti_artl['Date'],bharti_artl['Volume'],label="Bharti Airtel")
plt.plot(bpcl['Date'],bpcl['Volume'],label="BPCL")
plt.plot(britannia['Date'],britannia['Volume'],label="Britannia")
plt.plot(cipla['Date'],cipla['Volume'],label="Cipla")

plt.title("The Volumes of The NIFTY TOP 10",fontsize=15)
plt.xlabel("Year",fontsize=15)
plt.ylabel("Volume",fontsize=15)
plt.legend(fontsize=15,loc="best")
plt.show()

### Calculating the return of investment

adani_ports.tail(1)

# Return on investment if invested from the beginning to the end date
ap_invested=0 # amount invested
ap_shares_owned=0 # number of shares owned by the organisation

#calcuating total amount invested and shares owned
for i in range(len(adani_ports)):
    if adani_ports.loc[i,'Day']== 1:
        ap_invested+=adani_ports.loc[i,'Open']
        ap_shares_owned+=1
        
# results
print("Total Invested in Rupees :",round(ap_invested,3))
print("Shares Owned of the Oraganisation :",ap_shares_owned)
print("Average Investment per Share in Rupees :",round((ap_invested/ap_shares_owned),3))

ap_last_open_price = 730.05 #last open price of organisation

#investment results
ap_result=round((ap_last_open_price*ap_shares_owned)-ap_invested,3)
ap_roi=round((ap_result/ap_invested)*100,3) #return on investment

#investment results
print("\nInvestment Result of Adani Ports")
if ap_result<0:
    print("\tNet Loss in Rupees : ",ap_result)
else:
    print("\tNet Profit in Rupees : ",ap_result)
print("\nAdani Ports ROI in Percentage :",ap_roi,"%")

asian_paint.tail(1)

# Return on investment if invested from the beginning to the end date
asp_invested=0 # amount invested
asp_shares_owned=0 # number of shares owned by the organisation

#calcuating total amount invested and shares owned
for i in range(len(asian_paint)):
    if asian_paint.loc[i,'Day']== 1:
        asp_invested+=asian_paint.loc[i,'Open']
        asp_shares_owned+=1
        
# results
print("Total Invested in Rupees :",round(asp_invested,3))
print("Shares Owned of the Oraganisation :",asp_shares_owned)
print("Average Investment per Share in Rupees :",round((asp_invested/asp_shares_owned),3))

asp_last_open_price = 2536.4 #last open price of organisation

#investment results
asp_result=round((asp_last_open_price*asp_shares_owned)-asp_invested,3)
asp_roi=round((asp_result/asp_invested)*100,3) #return on investment

#investment results
print("\nInvestment Result of Asian Paints")
if asp_result<0:
    print("\tNet Loss in Rupees : ",asp_result)
else:
    print("\tNet Profit in Rupees : ",asp_result)
print("\nAsian Paints ROI in Percentage :",asp_roi,"%")

axis_bank.tail(1)

# Return on investment if invested from the beginning to the end date
axb_invested=0 # amount invested
axb_shares_owned=0 # number of shares owned by the organisation

#calcuating total amount invested and shares owned
for i in range(len(axis_bank)):
    if axis_bank.loc[i,'Day']== 1:
        axb_invested+=axis_bank.loc[i,'Open']
        axb_shares_owned+=1
        
# results
print("Total Invested in Rupees :",round(axb_invested,3))
print("Shares Owned of the Oraganisation :",axb_shares_owned)
print("Average Investment per Share in Rupees :",round((axb_invested/axb_shares_owned),3))

axb_last_open_price = 714.9 #last open price of organisation

#investment results
axb_result=round((axb_last_open_price*axb_shares_owned)-axb_invested,3)
axb_roi=round((axb_result/axb_invested)*100,3) #return on investment

#investment results
print("\nInvestment Result of Axis Bank")
if axb_result<0:
    print("\tNet Loss in Rupees : ",axb_result)
else:
    print("\tNet Profit in Rupees : ",axb_result)
print("\nAxis Bank ROI in Percentage :",axb_roi,"%")

bajaj_auto.tail(1)

# Return on investment if invested from the beginning to the end date
bjat_invested=0 # amount invested
bjat_shares_owned=0 # number of shares owned by the organisation

#calcuating total amount invested and shares owned
for i in range(len(bajaj_auto)):
    if bajaj_auto.loc[i,'Day']== 1:
        bjat_invested+=bajaj_auto.loc[i,'Open']
        bjat_shares_owned+=1
        
# results
print("Total Invested in Rupees :",round(bjat_invested,3))
print("Shares Owned of the Oraganisation :",bjat_shares_owned)
print("Average Investment per Share in Rupees :",round((bjat_invested/bjat_shares_owned),3))

bjat_last_open_price = 3833.75 #last open price of organisation

#investment results
bjat_result=round((bjat_last_open_price*bjat_shares_owned)-bjat_invested,3)
bjat_roi=round((bjat_result/bjat_invested)*100,3) #return on investment

#investment results
print("\nInvestment Result of Bajaj Auto")
if bjat_result<0:
    print("\tNet Loss in Rupees : ",bjat_result)
else:
    print("\tNet Profit in Rupees : ",bjat_result)
print("\nBajaj Auto ROI in Percentage :",bjat_roi,"%")

bajaj_finsv.tail(1)

# Return on investment if invested from the beginning to the end date
bjfs_invested=0 # amount invested
bjfs_shares_owned=0 # number of shares owned by the organisation

#calcuating total amount invested and shares owned
for i in range(len(bajaj_finsv)):
    if bajaj_finsv.loc[i,'Day']== 1:
        bjfs_invested+=bajaj_finsv.loc[i,'Open']
        bjfs_shares_owned+=1
        
# results
print("Total Invested in Rupees :",round(bjfs_invested,3))
print("Shares Owned of the Oraganisation :",bjfs_shares_owned)
print("Average Investment per Share in Rupees :",round((bjfs_invested/bjfs_shares_owned),3))

bjfs_last_open_price = 11041.65 #last open price of organisation

#investment results
bjfs_result=round((bjfs_last_open_price*ap_shares_owned)-bjfs_invested,3)
bjfs_roi=round((bjfs_result/bjfs_invested)*100,3) #return on investment

#investment results
print("\nInvestment Result of Bajaj Finserv")
if bjfs_result<0:
    print("\tNet Loss in Rupees : ",bjfs_result)
else:
    print("\tNet Profit in Rupees : ",bjfs_result)
print("\nBajaj Finserv ROI in Percentage :",bjfs_roi,"%")

baj_finance.tail(1)

# Return on investment if invested from the beginning to the end date
bjfn_invested=0 # amount invested
bjfn_shares_owned=0 # number of shares owned by the organisation

#calcuating total amount invested and shares owned
for i in range(len(baj_finance)):
    if baj_finance.loc[i,'Day']== 1:
        bjfn_invested+=baj_finance.loc[i,'Open']
        bjfn_shares_owned+=1
        
# results
print("Total Invested in Rupees :",round(bjfn_invested,3))
print("Shares Owned of the Oraganisation :",bjfn_shares_owned)
print("Average Investment per Share in Rupees :",round((bjfn_invested/bjfn_shares_owned),3))

bjfn_last_open_price = 5451.9 #last open price of organisation

#investment results
bjfn_result=round((bjfn_last_open_price*bjfn_shares_owned)-bjfn_invested,3)
bjfn_roi=round((bjfn_result/bjfn_invested)*100,3) #return on investment

#investment results
print("\nInvestment Result of Bajaj Finance")
if bjfn_result<0:
    print("\tNet Loss in Rupees : ",bjfn_result)
else:
    print("\tNet Profit in Rupees : ",bjfn_result)
print("\nBajaj Finance ROI in Percentage :",bjfn_roi,"%")

bharti_artl.tail(1)

# Return on investment if invested from the beginning to the end date
bAir_invested=0 # amount invested
bAir_shares_owned=0 # number of shares owned by the organisation

#calcuating total amount invested and shares owned
for i in range(len(bharti_artl)):
    if bharti_artl.loc[i,'Day']== 1:
        bAir_invested+=bharti_artl.loc[i,'Open']
        bAir_shares_owned+=1
        
# results
print("Total Invested in Rupees :",round(bAir_invested,3))
print("Shares Owned of the Oraganisation :",bAir_shares_owned)
print("Average Investment per Share in Rupees :",round((bAir_invested/bAir_shares_owned),3))

bAir_last_open_price = 536.75 #last open price of organisation

#investment results
bAir_result=round((bAir_last_open_price*bAir_shares_owned)-bAir_invested,3)
bAir_roi=round((bAir_result/bAir_invested)*100,3) #return on investment

#investment results
print("\nInvestment Result of Bharti Airtel")
if bAir_result<0:
    print("\tNet Loss in Rupees : ",bAir_result)
else:
    print("\tNet Profit in Rupees : ",bAir_result)
print("\nBharti Airtel ROI in Percentage :",bAir_roi,"%")

bpcl.tail(1)

# Return on investment if invested from the beginning to the end date
bpcl_invested=0 # amount invested
bpcl_shares_owned=0 # number of shares owned by the organisation

#calcuating total amount invested and shares owned
for i in range(len(bpcl)):
    if bpcl.loc[i,'Day']== 1:
        bpcl_invested+=bpcl.loc[i,'Open']
        bpcl_shares_owned+=1
        
# results
print("Total Invested in Rupees :",round(bpcl_invested,3))
print("Shares Owned of the Oraganisation :",bpcl_shares_owned)
print("Average Investment per Share in Rupees :",round((bpcl_invested/bpcl_shares_owned),3))

bpcl_last_open_price = 421.8 #last open price of organisation

#investment results
bpcl_result=round((bpcl_last_open_price*bpcl_shares_owned)-bpcl_invested,3)
bpcl_roi=round((bpcl_result/bpcl_invested)*100,3) #return on investment

#investment results
print("\nInvestment Result of BPCL")
if bpcl_result<0:
    print("\tNet Loss in Rupees : ",bpcl_result)
else:
    print("\tNet Profit in Rupees : ",bpcl_result)
print("\nBPCL ROI in Percentage :",bpcl_roi,"%")

britannia.tail(1)

# Return on investment if invested from the beginning to the end date
btna_invested=0 # amount invested
btna_shares_owned=0 # number of shares owned by the organisation

#calcuating total amount invested and shares owned
for i in range(len(britannia)):
    if britannia.loc[i,'Day']== 1:
        btna_invested+=britannia.loc[i,'Open']
        btna_shares_owned+=1
        
# results
print("Total Invested in Rupees :",round(btna_invested,3))
print("Shares Owned of the Oraganisation :",btna_shares_owned)
print("Average Investment per Share in Rupees :",round((btna_invested/btna_shares_owned),3))

btna_last_open_price = 3449.0 #last open price of organisation

#investment results
btna_result=round((btna_last_open_price*btna_shares_owned)-btna_invested,3)
btna_roi=round((btna_result/btna_invested)*100,3) #return on investment

#investment results
print("\nInvestment Result of Britannia")
if btna_result<0:
    print("\tNet Loss in Rupees : ",btna_result)
else:
    print("\tNet Profit in Rupees : ",btna_result)
print("\nBritannia ROI in Percentage :",btna_roi,"%")

cipla.tail(1)

# Return on investment if invested from the beginning to the end date
cp_invested=0 # amount invested
cp_shares_owned=0 # number of shares owned by the organisation

#calcuating total amount invested and shares owned
for i in range(len(cipla)):
    if cipla.loc[i,'Day']== 1:
        cp_invested+=cipla.loc[i,'Open']
        cp_shares_owned+=1
        
# results
print("Total Invested in Rupees :",round(cp_invested,3))
print("Shares Owned of the Oraganisation :",cp_shares_owned)
print("Average Investment per Share in Rupees :",round((cp_invested/cp_shares_owned),3))

cp_last_open_price = 910.35 #last open price of organisation

#investment results
cp_result=round((cp_last_open_price*cp_shares_owned)-cp_invested,3)
cp_roi=round((cp_result/cp_invested)*100,3) #return on investment

#investment results
print("\nInvestment Result of Adani Ports")
if cp_result<0:
    print("\tNet Loss in Rupees : ",cp_result)
else:
    print("\tNet Profit in Rupees : ",cp_result)
print("\nAdani Ports ROI in Percentage :",cp_roi,"%")

stocks = ["adani_ports","asian_paint","axis_bank","bajaj_auto","bajaj_finsv","baj_finance","bharti_artl","bpcl","britannia","cipla"]
roi = [ap_roi,asp_roi,axb_roi,bjat_roi,bjfs_roi,bjfn_roi,bAir_roi,bpcl_roi,btna_roi,cp_roi]

plt.figure(figsize=(15,8))
sns.barplot(x=stocks,y=roi)
plt.title("Return on Investment")
plt.xlabel("Stocks")
plt.ylabel("Percentage")

result=[ap_result,asp_result,axb_result,bjat_result,bjfs_result,bjfn_result,bAir_result,bpcl_result,btna_result,cp_result]
plt.figure(figsize=(15,8))
sns.barplot(x=stocks,y=result)
plt.title("Profit/Loss")
plt.xlabel("Stocks")
plt.ylabel("Amount")

shares_owned = [ap_shares_owned,asp_shares_owned,axb_shares_owned,bjat_shares_owned,bjfs_shares_owned,bjfn_shares_owned,bAir_shares_owned,bpcl_shares_owned,btna_shares_owned,cp_shares_owned]
plt.figure(figsize=(15,15))
plt.pie(shares_owned,labels=stocks,autopct="%.3f%%")
plt.title("Portfolio",fontsize=15)
plt.legend(loc="lower left")

